{"version":3,"sources":["mockData.js","App.js","reportWebVitals.js","index.js"],"names":["friendList","App","useState","friendInput","setFriendInput","friendListState","setFriendListState","favouriteList","setFavouriteList","useEffect","editFavourite","value","result","includes","filter","x","push","deleteFriend","window","confirm","searchFriend","toLowerCase","indexOf","className","style","width","border","backgroundColor","textAlign","padding","fontWeight","display","borderBottom","placeholder","flex","onChange","event","Number","target","match","onKeyPress","list","key","background","onClick","icon","faSearch","sortedArray","forEach","item","index","height","overflowY","overflowX","maxHeight","map","isFavourite","fontSize","color","marginRight","faStar","faTrashAlt","displayFriendList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35b4ea1f.chunk.js","sourcesContent":["export var friendList = {\r\n    \"friends\":[\"Emily\",\"Hannah\",\"Madison\",\"Ashley\",\"Sarah\",\"Alexis\",\"Samantha\",\"Jessica\",\"Elizabeth\",\"Taylor\",\"Lauren\",\"Alyssa\"],\r\n    \"favorites\": [\"Emily\",\"Hannah\",\"Elizabeth\",\"Taylor\"]\r\n}\r\n","import './App.css';\r\nimport {friendList} from \"./mockData\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar, faTrashAlt, faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useState } from 'react';\r\nfunction App() {\r\n  const [friendInput, setFriendInput] = useState(\"\");\r\n  const [friendListState, setFriendListState] = useState(friendList['friends']);\r\n  const [favouriteList, setFavouriteList] = useState(friendList['favorites']);\r\n  const displayFriendList=()=>{\r\n      let sortedArray = [];\r\n      friendListState.forEach((item,index)=>{\r\n        if(favouriteList.includes(item))\r\n        sortedArray.push(item);\r\n      })\r\n      friendListState.forEach((item)=>{\r\n        if(!sortedArray.includes(item))\r\n        sortedArray.push(item);\r\n      })\r\n          return (\r\n            <div style={{\r\n            height: \"auto\",\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\",\r\n            maxHeight: \"324px\"\r\n            }}\r\n        >\r\n            {sortedArray.map((item,index)=>\r\n            {\r\n              let isFavourite = favouriteList.includes(item);\r\n              return (\r\n                <div key={index} style={{width:\"29vw\", display:\"flex\", padding:\"10px\", borderBottom:\"0.5px solid lightgray\"}}>\r\n                  <div style={{flex:\"1 1 auto\", textAlign:\"left\"}}><div>{item}</div>\r\n                  <span style={{fontSize: \"small\", color: \"gray\"}}>is your friend</span>\r\n                  </div>\r\n                  <button style={{marginRight:\"10px\", background:\"none\", border:\"none\"}} onClick={()=>editFavourite(item)}><FontAwesomeIcon icon={faStar} color={isFavourite?\"black\":\"lightgray\"}/></button>\r\n                  <button style={{background:\"none\", border:\"none\"}} onClick={()=>deleteFriend(item)}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n                </div>\r\n              )\r\n            })\r\n            }\r\n            </div>\r\n          )\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(!friendInput)\r\n    setFriendListState(friendList['friends'])\r\n  }, [friendInput])\r\n\r\n  const editFavourite = (value) => {\r\n    let result = [...favouriteList];\r\n    if(favouriteList.includes(value))\r\n    {\r\n      result = favouriteList.filter(x => {\r\n        return (x!==value)\r\n      })\r\n    friendList['favorites'] = result;\r\n    }\r\n    if(!favouriteList.includes(value)) {\r\n      result.push(value);\r\n    friendList['favorites'].push(value);\r\n    }\r\n    setFavouriteList(result);\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    if(!Number(event.target.value) && !event.target.value.match(/[&?:'\"%#+,$!*@()=\\\\[\\];/]/g))\r\n    {\r\n      setFriendInput(event.target.value);\r\n      searchFriend();\r\n    }\r\n  }\r\n\r\n  const enterPress = (event) => {\r\n    let list = [...friendListState];\r\n    if (event.key === 'Enter')\r\n    {\r\n      if(!friendListState.includes(friendInput))\r\n      {\r\n        friendList['friends'].push(friendInput)\r\n        list.push(friendInput);\r\n        setFriendListState(list);\r\n      }\r\n      setFriendInput(\"\");\r\n    }\r\n  }\r\n\r\n  const deleteFriend = (value) => {\r\n    let choice = window.confirm(\"You really want to delete  \"+value+\"?\")\r\n    if (choice===true)\r\n    {\r\n    let result = friendListState.filter(x =>{\r\n      return (x!==value)\r\n    })\r\n    friendList['friends']=result;\r\n    setFriendListState(result);\r\n  }\r\n  }\r\n\r\n  const searchFriend = () => {\r\n    let result=[];\r\n    result = friendListState.filter(x =>{\r\n      return x.toLowerCase().indexOf(friendInput.toLowerCase()) !== -1;\r\n    })\r\n    if(result && friendInput)\r\n    setFriendListState(result)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{width:\"32vw\", border:\"1px solid lightgray\", backgroundColor:\"white\"}}>\r\n        <div style={{backgroundColor:\"lightgray\", width:\"auto\", textAlign:\"left\", padding:\"5px 10px\",fontWeight:\"bold\"}}>Friend List</div>\r\n        <div style={{width: \"29vw\", display: \"flex\", borderBottom:\"1px solid lightgray\"}}>\r\n          <input placeholder=\"Enter your friend's name\" \r\n          style={{width:\"inherit\", border:\"none\",padding:\"7px\", flex: \"1 1 auto\"}}\r\n          value={friendInput} \r\n          onChange={handleChange}\r\n          onKeyPress={enterPress}\r\n        />\r\n        <button style={{background:\"none\", border:\"none\"}} onClick={()=>searchFriend()}><FontAwesomeIcon icon={faSearch}/></button>\r\n        </div>\r\n        {friendListState && displayFriendList()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}